<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VTK on Nikola Stoyanov</title>
    <link>http://localhost:1313/blog/vtk/</link>
    <description>Recent content in VTK on Nikola Stoyanov</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2024, Nikola Stoyanov.</copyright>
    <lastBuildDate>Wed, 06 Jun 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/vtk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python and VTK scientific visualisation</title>
      <link>http://localhost:1313/python-and-vtk-scientific-visualisation/</link>
      <pubDate>Wed, 06 Jun 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/python-and-vtk-scientific-visualisation/</guid>
      <description>CrackVis is a visualisation tool which uses VTK to display a point cloud from ABAQUS 2D simulations. The input is a csv file which holds data in the following format:&#xA;X Y Z1 Z2 &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; &amp;hellip; Where \(X\) and \(Y\) are the coordinates of the nodes and \(Z_n\) is the data to be investigated.&#xA;The tool will plot the point cloud which represents the nodal values and add a scalar bar.</description>
    </item>
    <item>
      <title>Python and VTK scientific visualisation</title>
      <link>http://localhost:1313/python-and-vtk-scientific-visualisation/</link>
      <pubDate>Wed, 06 Jun 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/python-and-vtk-scientific-visualisation/</guid>
      <description>Understanding adjoints Writing up my PhD is a pain mainly because of the detailed explanations that need to be provided. A technique I used throughout my project is to solve parameter optimization problems using the adjoint method. I learned the technique and used it, but never really got it until reading an amazing paper. This post represents my notes and Julia implementation of the work detailed in https://math.mit.edu/~stevenj/18.336/adjoint.pdf by Steven G.</description>
    </item>
  </channel>
</rss>
